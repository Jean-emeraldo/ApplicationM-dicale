@{
    Layout = null;
}

<!DOCTYPE html>
<html lang="fr">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>MediCare - Inscription Utilisateur</title>
    <link href="https://fonts.googleapis.com/css2?family=Poppins:wght@300;400;500;600;700&display=swap" rel="stylesheet">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css">
    <style>
        :root {
            --primary: #4361ee;
            --primary-dark: #3a56d4;
            --secondary: #3f37c9;
            --success: #4cc9f0;
            --danger: #f72585;
            --warning: #f8961e;
            --light: #f8f9fa;
            --dark: #212529;
            --gray: #6c757d;
            --light-gray: #e9ecef;
        }

        * {
            box-sizing: border-box;
            margin: 0;
            padding: 0;
        }

        body {
            font-family: 'Poppins', sans-serif;
            background-color: #f5f7fb;
            color: var(--dark);
            line-height: 1.6;
            min-height: 100vh;
            display: flex;
            flex-direction: column;
        }

        .header {
            background: linear-gradient(135deg, var(--primary), var(--secondary));
            color: white;
            padding: 1rem 0;
            box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);
        }

        .header-container {
            max-width: 1200px;
            margin: 0 auto;
            padding: 0 2rem;
            display: flex;
            justify-content: space-between;
            align-items: center;
        }

        .logo {
            display: flex;
            align-items: center;
            font-size: 1.5rem;
            font-weight: 600;
            color: white;
            text-decoration: none;
        }

        .logo i {
            margin-right: 0.75rem;
            font-size: 1.8rem;
        }

        .main-container {
            flex: 1;
            display: flex;
            align-items: center;
            justify-content: center;
            padding: 2rem;
        }

        .form-container {
            background-color: white;
            border-radius: 10px;
            box-shadow: 0 5px 20px rgba(0, 0, 0, 0.08);
            padding: 2.5rem;
            width: 100%;
            max-width: 500px;
        }

        .form-header {
            text-align: center;
            margin-bottom: 2rem;
        }

        .form-header h1 {
            color: var(--primary);
            font-size: 1.8rem;
            margin-bottom: 0.5rem;
        }

        .form-header p {
            color: var(--gray);
        }

        .form-group {
            margin-bottom: 1.5rem;
        }

        .form-label {
            display: block;
            margin-bottom: 0.5rem;
            font-weight: 500;
            color: var(--dark);
        }

        .form-label i {
            margin-right: 0.5rem;
            color: var(--primary);
            width: 1.25rem;
            text-align: center;
        }

        .form-control {
            width: 100%;
            padding: 0.875rem 1rem;
            border: 1px solid var(--light-gray);
            border-radius: 8px;
            font-size: 1rem;
            transition: all 0.3s ease;
        }

        .form-control:focus {
            border-color: var(--primary);
            box-shadow: 0 0 0 0.2rem rgba(67, 97, 238, 0.25);
            outline: none;
        }

        .password-container {
            position: relative;
        }

        .toggle-password {
            position: absolute;
            right: 10px;
            top: 50%;
            transform: translateY(-50%);
            cursor: pointer;
            color: var(--gray);
        }

        .password-strength {
            height: 4px;
            background-color: var(--light-gray);
            margin-top: 0.5rem;
            border-radius: 2px;
            overflow: hidden;
        }

        .strength-meter {
            height: 100%;
            width: 0;
            transition: width 0.3s ease, background-color 0.3s ease;
        }

        .form-text {
            display: block;
            margin-top: 0.25rem;
            font-size: 0.875rem;
            color: var(--gray);
        }

        .btn {
            display: inline-block;
            padding: 0.875rem 1.75rem;
            background-color: var(--primary);
            color: white;
            border: none;
            border-radius: 8px;
            font-size: 1rem;
            font-weight: 500;
            cursor: pointer;
            transition: all 0.3s ease;
            text-align: center;
            width: 100%;
        }

        .btn:hover {
            background-color: var(--primary-dark);
            transform: translateY(-2px);
            box-shadow: 0 4px 12px rgba(0, 0, 0, 0.15);
        }

        .btn i {
            margin-right: 0.5rem;
        }

        .login-link {
            text-align: center;
            margin-top: 1.5rem;
        }

        .login-link a {
            color: var(--primary);
            text-decoration: none;
            font-weight: 500;
            transition: all 0.3s ease;
        }

        .login-link a:hover {
            color: var(--secondary);
            text-decoration: underline;
        }

        .error-message {
            color: var(--danger);
            font-size: 0.875rem;
            margin-top: 0.25rem;
            display: none;
        }

        .form-control.invalid {
            border-color: var(--danger);
        }

        footer {
            background-color: var(--dark);
            color: white;
            padding: 1.5rem 0;
            text-align: center;
        }

        .footer-text {
            color: var(--light-gray);
            font-size: 0.875rem;
        }

    </style>
</head>
<body>
    <header class="header">
        <div class="header-container">
            <a href="@Url.Action("Index", "Home")" class="logo">
                <i class="fas fa-heartbeat"></i>
                <span>MediCare</span>
            </a>
        </div>
    </header>
    
    <main class="main-container">
        <div class="form-container">
            <div class="form-header">
                <h1><i class="fas fa-user-plus"></i> Créer un compte</h1>
                <p>Rejoignez notre plateforme médicale en quelques étapes simples</p>
            </div>
            
            <form id="registerForm" action="/register" method="post" autocomplete="on" novalidate>
                <div class="form-group">
                    <label for="fullName" class="form-label">
                        <i class="fas fa-user"></i> Nom Complet
                    </label>
                    <input type="text" id="fullName" name="FullName" class="form-control" required autocomplete="name">
                    <div class="error-message" id="fullName-error">Veuillez saisir votre nom complet</div>
                </div>
                
                <div class="form-group">
                    <label for="email" class="form-label">
                        <i class="fas fa-envelope"></i> Adresse Email
                    </label>
                    <input type="email" id="email" name="Email" class="form-control" required autocomplete="email">
                    <div class="error-message" id="email-error">Veuillez saisir une adresse email valide</div>
                </div>
                
                <div class="form-group">
                    <label for="username" class="form-label">
                        <i class="fas fa-user-circle"></i> Nom d'utilisateur
                    </label>
                    <input type="text" id="username" name="UserName" class="form-control" required autocomplete="username">
                    <div class="error-message" id="username-error">Veuillez choisir un nom d'utilisateur</div>
                </div>
                
                <div class="form-group">
                    <label for="password" class="form-label">
                        <i class="fas fa-lock"></i> Mot de passe
                    </label>
                    <div class="password-container">
                        <input type="password" id="password" name="Password" class="form-control" required autocomplete="new-password" minlength="8">
                        <i class="fas fa-eye toggle-password" id="togglePassword"></i>
                        <div class="password-strength">
                            <div class="strength-meter" id="strengthMeter"></div>
                        </div>
                    </div>
                    <small class="form-text">Minimum 8 caractères avec des chiffres et lettres</small>
                    <div class="error-message" id="password-error">Le mot de passe doit contenir au moins 8 caractères</div>
                </div>
                
                <div class="form-group">
                    <label for="confirmPassword" class="form-label">
                        <i class="fas fa-lock"></i> Confirmer le mot de passe
                    </label>
                    <div class="password-container">
                        <input type="password" id="confirmPassword" name="ConfirmPassword" class="form-control" required autocomplete="new-password">
                        <i class="fas fa-eye toggle-password" id="toggleConfirmPassword"></i>
                    </div>
                    <div class="error-message" id="confirmPassword-error">Les mots de passe ne correspondent pas</div>
                </div>
                
                <button type="submit" class="btn">
                    <i class="fas fa-user-plus"></i> S'inscrire
                </button>
                
                <div class="login-link">
                    Déjà inscrit? <a href="@Url.Action("Login", "Account")">Connectez-vous ici</a>
                </div>
            </form>
        </div>
    </main>
    
    <footer>
        <div class="footer-text">&copy; @DateTime.Now.Year MediCare. Tous droits réservés.</div>
    </footer>

    <script>
        // Fonctionnalité d'affichage/masquage du mot de passe
        document.getElementById('togglePassword').addEventListener('click', function() {
            const passwordInput = document.getElementById('password');
            const type = passwordInput.getAttribute('type') === 'password' ? 'text' : 'password';
            passwordInput.setAttribute('type', type);
            this.classList.toggle('fa-eye-slash');
        });

        document.getElementById('toggleConfirmPassword').addEventListener('click', function() {
            const confirmPasswordInput = document.getElementById('confirmPassword');
            const type = confirmPasswordInput.getAttribute('type') === 'password' ? 'text' : 'password';
            confirmPasswordInput.setAttribute('type', type);
            this.classList.toggle('fa-eye-slash');
        });

        // Vérification de la force du mot de passe
        document.getElementById('password').addEventListener('input', function(e) {
            const password = e.target.value;
            const strengthMeter = document.getElementById('strengthMeter');
            let strength = 0;
            
            // Vérification de la longueur
            if (password.length >= 8) strength += 1;
            if (password.length >= 12) strength += 1;
       
      
            
            // Vérification des chiffres
            if (/\d/.test(password)) strength += 1;
            
            // Vérification des majuscules/minuscules
            if (/[a-z]/.test(password) && /[A-Z]/.test(password)) strength += 1;
            
            // Mise à jour de la barre de force
            let width = 0;
            let color = '';
            
            switch(strength) {
                case 0:
                case 1:
                    width = 25;
                    color = var(--danger);
                    break;
                case 2:
                    width = 50;
                    color = var(--warning);
                    break;
                case 3:
                    width = 75;
                    color = '#5cb85c';
                    break;
                case 4:
                case 5:
                    width = 100;
                    color = var(--success);
                    break;
            }
            
            strengthMeter.style.width = `${width}%`;
            strengthMeter.style.backgroundColor = color;
        });

        // Validation du formulaire
        document.getElementById('registerForm').addEventListener('submit', function(event) {
            let isValid = true;
            
            // Validation du nom complet
            const fullName = document.getElementById('fullName');
            if (!fullName.value.trim()) {
                showError(fullName, 'fullName-error');
                isValid = false;
            } else {
                hideError(fullName, 'fullName-error');
            }
            
            // Validation de l'email
            const email = document.getElementById('email');
            if (!email.value || !validateEmail(email.value)) {
                showError(email, 'email-error');
                isValid = false;
            } else {
                hideError(email, 'email-error');
            }
            
            // Validation du nom d'utilisateur
            const username = document.getElementById('username');
            if (!username.value.trim()) {
                showError(username, 'username-error');
                isValid = false;
            } else {
                hideError(username, 'username-error');
            }
            
            // Validation du mot de passe
            const password = document.getElementById('password');
            if (!password.value || password.value.length < 8) {
                showError(password, 'password-error');
                isValid = false;
            } else {
                hideError(password, 'password-error');
            }
            
            // Validation de la confirmation du mot de passe
            const confirmPassword = document.getElementById('confirmPassword');
            if (!confirmPassword.value || confirmPassword.value !== password.value) {
                showError(confirmPassword, 'confirmPassword-error');
                isValid = false;
            } else {
                hideError(confirmPassword, 'confirmPassword-error');
            }
            
            if (!isValid) {
                event.preventDefault();
                // Faire défiler jusqu'au premier champ erroné
                const firstError = document.querySelector('.invalid');
                if (firstError) {
                    firstError.scrollIntoView({ behavior: 'smooth', block: 'center' });
                }
            }
        });
        
        function showError(inputElement, errorId) {
            inputElement.classList.add('invalid');
            document.getElementById(errorId).style.display = 'block';
        }
        
        function hideError(inputElement, errorId) {
            inputElement.classList.remove('invalid');
            document.getElementById(errorId).style.display = 'none';
        }
        
       
    </script>
</body>
</html>